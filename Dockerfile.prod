# Imagem para o container de builder
FROM php:7.3-fpm-alpine as builder
RUN apk add --no-cache openssl bash mysql-client nodejs npm
RUN docker-php-ext-install pdo pdo_mysql

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

WORKDIR /var/www
RUN rm -rf /var/www/html 
RUN ln -s public html

COPY . /var/www
RUN composer install && \
    php artisan key:generate && \
    php artisan cache:clear && \
    chmod -R 775 storage
RUN npm install

# Imagem para o container de produção
FROM php:7.3-fpm-alpine
RUN apk add --no-cache mysql-client
RUN docker-php-ext-install pdo pdo_mysql
WORKDIR /var/www
RUN rm -rf /var/www/html

# Esta copiando de /var/www do container de builder para o container de prod
COPY --from=builder /var/www .

EXPOSE 9000
ENTRYPOINT ["php-fpm"]